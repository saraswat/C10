/* A puzzle from Gopal Raghavan. Find the longest word w which is such that
 for every letter occurrence l in w there is a distinct anagram of w starting with l.
*/
class Crossgram {
    @Gentzen def word(w:Atom, c:Char, ws:Atom).
    goal crossgrams(Dict: List[Atom]) = R!{
	if (all (W in Dict) {
		W = name(Wls),
		Wsls = Wls.msort(),
		word(W, Wls.head, Wsls.head, name(Wsls)) // asserted in the store
	    }) 
        R=bagof(List(A,B), {word(A, C, C, Ws), A=name(Wls), B=Wls.tail.map((L:Char)=>W!{word(W,L,_,Ws)})})
     } 

     goal crossgram(Words:List[Atom]) { 
	word(Words.head, C, C, Ws),
        Words = List(name(Wls), Wls.tail.map((L:Char)=> W!{word(W,L,_,Ws)}))
     }

}
